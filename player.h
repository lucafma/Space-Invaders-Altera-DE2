/****************************************************************/
/* FUJITSU MICROELECTRONICS EUROPE  -  BITMAP CONVERTER (V2.20) */
/* BITMAP FILE "player"                                         */
/* BITMAP SIZE : X=16 Y=16 PIXEL                                */
/* CREATED 22/05/2017 19:44:20                                  */
/* OUTPUT FORMAT : JASMINE 16BPP (565) UNCOMPRESSED             */
/****************************************************************/
#import "pixel.h"

void draw_player(int x);
void clear_player(int x);

const unsigned short player[256] = { 
0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xF79E,0xF79E,0xFFFF,
0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
0xFFFF,0xFFFF,0xFFFF,0x9492,0x73AE,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xBDD7,0x6B4D,
0x6B4D,0xA534,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
0xFFFF,0xFFFF,0xFFFF,0xFFDF,0x6B6E,0xAD76,0xCE59,0x630C,0xF79D,0xFFFF,
0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xAD55,
0x6B6E,0x9D14,0xA534,0x73AF,0x94B2,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xCE79,0x7C31,0x636E,0x8CF3,0x9554,0x636E,
0x7410,0xC618,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFBE,0xD679,0xAD55,
0x7C31,0xA5D8,0x6BAF,0x9DF7,0xAE99,0x638E,0xA5D8,0x8452,0x9D14,0xCE59,
0xF79E,0xFFFF,0xF79E,0x9CF4,0x6C10,0x7451,0x9DD7,0x84F3,0x52CB,0x6BAE,
0x73EF,0x52CB,0x7471,0xA5F8,0x7C72,0x6C10,0x8CB3,0xE73C,0x9493,0x7C51,
0xCF7D,0xA618,0x9555,0x532C,0x7C51,0x9CF3,0x8C71,0x8CD3,0x4ACB,0x8D35,
0x9DB7,0xCF7D,0x8CF4,0x8410,0x8430,0x9555,0x7CB3,0x534D,0x9D76,0x9D56,
0x73AF,0x6BAE,0x6B8E,0x73AF,0x94F4,0xA5D7,0x5B6D,0x7451,0x9D97,0x73AF,
0x8C51,0x8472,0x4A6A,0x4228,0x6BAF,0x8493,0x5AEC,0x2965,0x2945,0x528A,
0x8473,0x73D0,0x4A69,0x4208,0x8472,0x7BEF,0x7BD0,0x2104,0xBDD7,0xFFDF,
0x8431,0x10A4,0xDEDB,0xAD34,0x9492,0xE73C,0x2966,0x6B4D,0xFFDF,0xD69A,
0x2966,0x5AEB,0x73AE,0x52AA,0xEF7D,0xFFFF,0xB34C,0x5800,0xE595,0xFFFF,
0xFFFF,0xF6B9,0x6861,0x9A07,0xFFFF,0xFFFF,0x6B6E,0x52CB,0xDEDB,0xEF7D,
0xFFFF,0xFFFF,0xF592,0xE347,0xFED9,0xFFFF,0xFFFF,0xFF7C,0xEBA9,0xF4AE,
0xFFFF,0xFFFF,0xFFDF,0xD6BA,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFE,0xFF9B,
0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFBB,0xFFFD,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
0xFFFF,0xFFDF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,
0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFDF,0xFFFF
};

void draw_player(int x){
	int x_p, y, i = 0;
	for(y = 207; y < 223; y++){
		for(x_p = x; x_p < x+16; x_p++){
			draw_pixel(x_p, y, player[i]);
			i++;
		}
	}
}

void clear_player(int x){
	int x_p, y;
	for(y = 207; y < 223; y++){
		for(x_p = x; x_p < x+16; x_p++){
			draw_pixel(x_p, y, 0xFFFF);
		}
	}
}
